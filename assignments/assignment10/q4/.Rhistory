readfile=<- read.csv(file.choose())
readfile=<-read.csv(file.choose())
readfile=< - read.csv(file.choose())
readfile= <- read.csv(file.choose())
inputdata<-read.csv("C:\Users\mkompal\Desktop\vis\passingdata",header="TRUE",sep=",")
inputdata<-read.csv("C:\Users\mkompal\Desktop\vis\passingdata",header="TRUE",sep=",");
mydata <- read.csv("C:/Users/PinkiePiez/Desktop/Assignments/cs825/A3/passing-stats-2014.csv", header = TRUE, sep = ",");
mydata <- read.csv("C:/Users/mkompal/Desktop/vis/passingdata", header = TRUE, sep = ",");
mydata <- read.csv("C:/Users/mkompal/Desktop/vis/passingdata.csv", header = TRUE, sep = ",");
clear
cls
readfile <- read.csv("C:/Users/mkompal/Desktop/vis/passingdata.csv", header = TRUE, sep = ",");
passingdata<-subset(readfile, select=c(PassingYards,PassingTD,Rate,RushingYards,RushingTD))
passingdata<-subset(readfile, select=c(PassingYards,PassingTD,Rate,RushingYards,RushingTD))
passingdata<-subset(readfile, select=c(Passing.Yards,Passing.TD,Rate,Rushing.Yards,Rushing.TD))
pairs(passingdata)
passingdata<-subset(readfile, select=c(Passing_Yards,Passing_TD,Rate,Rushing_Yards,Rushing_TD))
passingdata<-subset(readfile, select=c(PassingYards,Passing_TD,Rate,Rushing_Yards,Rushing_TD))
passingdata<-subset(readfile, select=c(PassingYards,Passing_TD,Rate,Rushing_Yards,Rushing_TD))
data_two <- subset (readfile, select=c(Player, Passing.Yards, Conf));
confColFunction <- function(val) { 
    out <- ifelse(val == 'Pac-12', 'aliceblue', 
           ifelse(val == 'MWC', 'cadetblue', 
           ifelse(val == 'MAC', 'aquamarine', 
           ifelse(val == 'SEC', 'chocolate1', 
           ifelse(val =='Big 12', 'blue', 
           ifelse(val == 'Big Ten', 'burlywood1', 
           ifelse(val == 'CUSA', 'darkgreen', 
           ifelse(val == 'ACC', 'darkorange', 
           ifelse(val == 'American', 'firebrick1', 
           ifelse(val == 'Ind', 'darkorchid4', 
           ifelse(val == 'Sun Belt', 'gold1', 'gray')))))))))));
    return(out);
           ifel
 colour<-function(color) {
 ifelse(color=='ACC','deepskyblue',
 ifelse(color=='American','burlywood1',
 ifelse(color=='Big 12','darkgoldenrod4'',
 ifelse(color=='Big Ten','firebrick1',
 ifelse(color=='CUSA','darkmagenta',
 ifelse(color=='Ind','cadetblue',
 ifelse(color=='MAC','gray4',
 ifelse(color=='MWC','darkgreen,
 ifelse(color=='Pac-12','aquamarine'',
 ifelse(color=='SEC','aliceblue',
 ifelse(color=='MWC','darkgreen',
 graph_colors<-function(color) {
 ifelse(color=='ACC','deepskyblue',
 ifelse(color=='American','burlywood1',
 ifelse(color=='Big 12','darkgoldenrod4'',
 ifelse(color=='Big Ten','firebrick1',
 ifelse(color=='CUSA','darkmagenta',
 ifelse(color=='Ind','cadetblue',
 ifelse(color=='MAC','gray4',
 ifelse(color=='MWC','darkgreen,
 ifelse(color=='Pac-12','aquamarine'',
 ifelse(color=='SEC','aliceblue',
 ifelse(color=='Sun Belt','darkorchid4', 'pink')))))))))))}
 graph_colors<-function(color) {
 ifelse(color=='ACC','deepskyblue',
 ifelse(color=='American','burlywood1',
 ifelse(color=='Big 12','darkgoldenrod4',
 ifelse(color=='Big Ten','firebrick1',
 ifelse(color=='CUSA','darkmagenta',
 ifelse(color=='Ind','cadetblue',
 ifelse(color=='MAC','gray4',
 ifelse(color=='MWC','darkgreen',
 ifelse(color=='Pac-12','aquamarine',
 ifelse(color=='SEC','aliceblue',
 ifelse(color=='Sun Belt','darkorchid4', 'pink')))))))))))}
margins<- par(mar = c(5,6,3,1) + 0.2)
q2Data <- subset (originalData, select=c(Player, Passing.Yards, Conf));
# function for coloring the conferences
confColFunction <- function(val) { 
    out <- ifelse(val == 'Pac-12', 'aliceblue', 
           ifelse(val == 'MWC', 'cadetblue', 
           ifelse(val == 'MAC', 'aquamarine', 
           ifelse(val == 'SEC', 'chocolate1', 
           ifelse(val =='Big 12', 'blue', 
           ifelse(val == 'Big Ten', 'burlywood1', 
           ifelse(val == 'CUSA', 'darkgreen', 
           ifelse(val == 'ACC', 'darkorange', 
           ifelse(val == 'American', 'firebrick1', 
           ifelse(val == 'Ind', 'darkorchid4', 
           ifelse(val == 'Sun Belt', 'gold1', 'gray')))))))))));
    return(out);
}
# set some parameters
param <- par(mar = c(5,5,2,2) + 0.1)
# generating the barchart
barplot(q2Data$Passing.Yards, 
        col = confColFunction(q2Data$Conf), 
        horiz = TRUE, 
        xlab = "Passing Yards", 
        names.arg = q2Data$Player, 
        las = 1, 
        cex.names = 0.45,
        xlim = c(0,5000));
# creating unique conferences for legend
conferences <- unique(q2Data$Conf, incomparables = FALSE)
# generating legend
legend(4200, 150, conferences, col=c(confColFunction(conferences)), lty = 1, lwd = 8, cex = 0.5)
originalData <- read.csv("C:\Users\mkompal\Desktop\vis\passingdata.csv")
data_two <- subset (readfile, select=c(Player, Passing.Yards, Conf));
conferenceColumns <- function(col) { 
    output <- ifelse(col=='ACC','deepskyblue',
 ifelse(col=='American','burlywood1',
 ifelse(col=='Big 12','darkgoldenrod4',
 ifelse(col=='Big Ten','firebrick1',
 ifelse(col=='CUSA','darkmagenta',
 ifelse(col=='Ind','cadetblue',
 ifelse(col=='MAC','gray4',
 ifelse(col=='MWC','darkgreen',
 ifelse(col=='Pac-12','aquamarine',
 ifelse(col=='SEC','aliceblue',
 ifelse(col=='Sun Belt','darkorchid4', 'pink')))))))))));
    return(output);
}
margins <- par(mar = c(5,4,3,1) + 0.3)
barplot(data_two$Passing.Yards, 
        cols = confColFunction(data_two$Conf), 
        horiz = TRUE, 
        xlab = "Passing Yards", 
        names.arg = data_two$Player, 
        las = 1, 
        cex.names = 0.45,
        xlim = c(0,5000));
barplot(data_two$Passing.Yards, 
        col = confColFunction(data_two$Conf), 
        horiz = TRUE, 
        xlab = "Passing Yards", 
        names.arg = data_two$Player, 
        las = 1, 
        cex.names = 0.45,
        xlim = c(0,5000));
uniq_conf <- unique(data_two$Conf, incomparables = FALSE)
legend(3800, 135, uniq_conf, col=c(conferenceColumns(uniq_conf)), lty = 1, lwd = 8, cex = 0.5)
legend(5000, 135, uniq_conf, col=c(conferenceColumns(uniq_conf)), lty = 1, lwd = 8, cex = 0.5)
legend(5000, 160, uniq_conf, col=c(conferenceColumns(uniq_conf)), lty = 1, lwd = 8, cex = 0.5)
data_three<- subset (readfile, select=c(Cmp, Conf))
avg_value <- aggregate( Cmp ~ Conf, data_three, mean )
barplot(avg_value$Cmp, names.arg=avg_value $Conf, col=c(getCorrectColor(avg_value $Conf)), xlab="Conference", ylab="Avg. PassCompletions",  ylim = c(0, 19))
barplot(avg_value$Cmp, names.arg=avg_value $Conf, col=c(conferenceColumns(avg_value $Conf)), xlab="Conference", ylab="Avg. PassCompletions",  ylim = c(0, 19))
legend(12, 18, avg_value$Conf, lty=c(1,1),lwd=c(10,5),col=c(conferenceColumns(avg_value$Conf)))
legend(12, 18, avg_value$Conf, lty=c(1,1),lwd=c(10,5),col=c(conferenceColumns(avg_value$Conf)))
legend(12, 18, avg_value$Conf, lty=c(1,1),lwd=c(10,5),col=c(conferenceColumns(avg_value$Conf)))
legend(12, 18, avg_value$Conf, lty=c(1,1),lwd=c(10,5),col=c(conferenceColumns(avg_value$Conf)))
avg_passingTDs<-aggregate( TD ~ data_three, mean )
d = read.table('Z:\wsprograms\qn2\final\memcount.json',col.name=c("col1","col2","col3"))
d = read.table('memcount.json',col.name=c("col1","col2","col3"))
d = read.table('memcount.json',col.name=c("col1","col2","col3))
d = read.table('memcount.json')
 d = read.table('memcount.json',col.name=c("col1"))
hist(col1)
hist(d$col1)
hist(main="URIs against mementos",xlab="Mementos",ylab="URI's")
hist(main="URIs against mementos",xlab="Mementos",ylab="URI's")
hist(main="URIs against mementos")
hist(main="URIs against mementos")
hist(d$col1,main="URIs against mementos")
d$col1=d$col1[which[d$col1<1000]]
d$col1=d$col1[which(d$col1<1000)]
d$col1=d$col1[which(d$col1<1100)]
d$col1=d$col1[which(d$col1<1100)]
hist(col1)
hist(d$col1)
d = read.csv( "memcount.json", stringsAsFactors=F, header = FALSE, sep = "\t" )
Mementos = d[,1]
brk <- seq(0, 48375, 1)
hist(Mementos, col=heat.colors(48375), main = "URIs vs. Number of Mementos", breaks=brk, freq = T, xlab="Mementos", ylab="URIs")
dev.off()
Mementos = Mementos[which(Mementos<200)]
brk <- seq(0, 200, 1)
hist(Mementos, col=heat.colors(200), main = "URIs vs. Number of Mementos", breaks=brk, freq = T, xlab="Mementos", ylab="URIs")
hist(Mementos, col=heat.colors(200), main = "URIs vs. Number of Mementos", breaks=brk, freq = T, xlab="Mementos", ylab="URIs",ylim=c(0,200))
hist(Mementos, col=heat.colors(200), main = "URIs vs. Number of Mementos", breaks=brk, freq = T, xlab="Mementos", ylab="URIs",ylim=c(0,20))
hist(Mementos, col=heat.colors(200), main = "URIs vs. Number of Mementos", breaks=brk, freq = T, xlab="Mementos", ylab="URIs")
hist(Mementos, col=heat.colors(200), main = "URIs vs. Number of Mementos", breaks=brk, freq = T, xlab="Mementos", ylab="URIs")
hist(Mementos, col=heat.colors(200), main = "URIs vs. Number of Mementos",xlim=c(0,6000), freq = T, xlab="Mementos", ylab="URIs")
 d = read.table('memcount.json',,col.name=c("mementos"))
hist(d$mementos)
hist(d$mementos,ylim=c(0,10))
hist(d$mementos,ylim=c(0,1000))
hist(d$mementos,ylim=c(0,10))
hist(Mementos)
hist(d$mementos,xlim=c(0,50),ylim=c(0,1000))
hist(d,xlim=c(0,50),ylim=c(0,1000))
hist(mementos,xlim=c(0,50),ylim=c(0,1000))
hist(d$mementos,xlim=c(0,50),ylim=c(0,1000),breaks=500)
 d = read.table('memcount.json',col.name=c("mementos"))
hist(d$mementos,xlim=c(0,50),ylim=c(0,1000),breaks=500)
hist(d$mementos,xlim=c(0,500),ylim=c(0,1000),breaks=500)
hist(d$mementos,xlim=c(0,1000),ylim=c(0,1000),breaks=500)
hist(d$mementos,xlim=c(0,1000),ylim=c(0,1000),breaks=500,col=3)
hist(d$mementos,xlim=c(0,4000),ylim=c(0,1000),breaks=500,col=3)
hist(d$mementos,xlim=c(0,4000),ylim=c(0,20),breaks=500,col=3)
hist(d$mementos,xlim=c(0,7000),ylim=c(0,20),breaks=500,col=3)
hist(d$mementos,xlim=c(0,8000),ylim=c(0,20),breaks=500,col=3)
hist(d$mementos,xlim=c(0,7000),ylim=c(0,20),breaks=500,col=3)
hist(d$mementos,xlim=c(0,7000),ylim=c(0,20),breaks=500,col=3,main"URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,7000),ylim=c(0,20),breaks=500,col=3,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,7000),ylim=c(0,20),breaks=500,col=1,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,2500),ylim=c(0,20),breaks=500,col=1,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,2500),ylim=c(0,20),breaks=500,col=4,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,1000),ylim=c(0,20),breaks=500,col=4,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,1000),ylim=c(0,20),breaks=500,col=6,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,1000),ylim=c(0,20),breaks=500,col=7,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,1000),ylim=c(0,20),breaks=500,col=8,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,1000),ylim=c(0,20),breaks=500,col=9,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,1000),ylim=c(0,20),breaks=500,col=2,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,1000),ylim=c(0,10),breaks=500,col=9,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,600),ylim=c(0,10),breaks=500,col=9,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,600),ylim=c(0,10),breaks=500,col=5,main="URIs vs Mementos",ylab="No. of URI's")
hist(d$mementos,xlim=c(0,600),ylim=c(0,10),breaks=500,col=9,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
hist(d$mementos,xlim=c(0,600),ylim=c(0,10),breaks=500,col=6,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
hist(d$mementos,xlim=c(0,600),ylim=c(0,10),breaks=500,col=3,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
hist(d$mementos,xlim=c(0,600),ylim=c(0,10),breaks=500,col=2,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
hist(d$mementos,xlim=c(0,600),ylim=c(0,10),breaks=500,col=7,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
hist(d$mementos,xlim=c(0,600),ylim=c(0,10),breaks=500,col=8,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
hist(d$mementos,xlim=c(0,700),ylim=c(0,1000),breaks=500,col=8,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
hist(d$mementos,xlim=c(0,700),ylim=c(0,10),breaks=500,col=8,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
hist(d$mementos,xlim=c(0,7000),ylim=c(0,10),breaks=500,col=8,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
hist(d$mementos,xlim=c(0,7000),ylim=c(0,10),breaks=500,col=5,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
q()
d = read . table ( 'memcount . j s on ' , col . name=c ( "mementos" ) )
2 hist (d$mementos , xl im=c (0 ,7000) , yl im=c ( 0 , 1 0 ) , br eaks=500 , col=5,
main="URIs vs Mementos" , ylab="No . o f URI ' s " , xlab="Mementos" )
d = read.table('memcount2.json',col.name=c("mementos"))
hist(d$mementos,xlim=c(0,7000),ylim=c(0,10),breaks=500,col=5,main="URIs vs Mementos",ylab="No. of URI's",xlab="Mementos")
d = read.table('rawdiff.txt' ,col.name=c("mementos"))
plot(hist_mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-2,20),col="blue",type="l")
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-2,20),type="l")
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(-1000,1000),ylim=c(-1000,1000),type="l")
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(-1000,1000),ylim=c(-1000,1000))
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-1000,1000))
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-5000,5000))
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-6000,6000))
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-9000,9000))
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-19000,19000))
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-500000,500000))
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-500000,500000),type="l")
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-50000,50000),type="l")
plot(d$mementos,xlab="Number of URI's",ylab="Difference between Old and New Mementos",xlim=c(0,1000),ylim=c(-700000,700000),type="l")
plot(d$mementos,xlab="Number of URI's",ylab="",xlim=c(0,1000),ylim=c(-700000,700000),type="l")
plot(d$mementos,xlab="URIs",ylab="Size difference in raw files",xlim=c(0,1000),ylim=c(-700000,700000),type="l")
d = read.table('rawdiff.txt' ,col.name=c("sizes"))
d = read.table('processdiff.txt' ,col.name=c("sizes"))
plot(d$sizes,xlab="URIs",ylab="Size difference in processed files",xlim=c(0,1000),ylim=c(-700000,700000),type="l")
plot(d$sizes,xlab="URIs",ylab="Size difference in processed files",xlim=c(0,1000),ylim=c(-300000,300000),type="l")
plot(d$sizes,xlab="URIs",ylab="Size difference in processed files",xlim=c(0,1000),ylim=c(-200000,200000),type="l")
plot(d$sizes,xlab="URIs",ylab="Size difference in processed files",xlim=c(0,1000),ylim=c(-200000,200000),type="l")
q()
